
Memory Configuration

Name             Origin             Length             Attributes
ddmem            0xbf800000         0x00008000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD iointerface.o
LOAD dldi_header.o
LOAD c:/devkitPro/libnds/lib\libnds7.a

.init           0xbf800000       0x60
                0xbf800000                __text_start = .
 *(.init)
 .init          0xbf800000       0x60 dldi_header.o
                0xbf800000                _start
                0xbf800060                . = ALIGN (0x4)

.text           0xbf800060        0x0
 *(.text.*)
 *(.stub)
 *(.gnu.warning)
 *(.gnu.linkonce.t*)
                0xbf800060                __glue_start = ABSOLUTE (.)
 *(.glue_7)
 .glue_7        0xbf800060        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0xbf800060        0x0 linker stubs
                0xbf800060                __glue_end = ABSOLUTE (.)
                0xbf800060                . = ALIGN (0x4)
 .text          0xbf800060        0x0 iointerface.o
 .text          0xbf800060        0x0 dldi_header.o

.vfp11_veneer   0xbf800060        0x0
 .vfp11_veneer  0xbf800060        0x0 linker stubs

.v4_bx          0xbf800060        0x0
 .v4_bx         0xbf800060        0x0 linker stubs

.iplt           0xbf800060        0x0
 .iplt          0xbf800060        0x0 iointerface.o

.rel.dyn        0xbf800060        0x0
 .rel.iplt      0xbf800060        0x0 iointerface.o

.fini           0xbf800060        0x0
 *(.fini)
                0xbf800060                . = ALIGN (0x4)
                0xbf800060                __text_end = .

.rodata         0xbf800060        0x0
 *(.rodata)
 *all.rodata*(*)
 *(.roda)
 *(.rodata.*)
 *(.gnu.linkonce.r*)
                0xbf800060                . = ALIGN (0x4)

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0xbf800060                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0xbf800060                __exidx_end = .
                0xbf800060                . = ALIGN (0x4)
                [!provide]                PROVIDE (__preinit_array_start, .)

.preinit_array
 *(.preinit_array)
                [!provide]                PROVIDE (__preinit_array_end, .)
                [!provide]                PROVIDE (__init_array_start, .)

.init_array
 *(.init_array)
                [!provide]                PROVIDE (__init_array_end, .)
                [!provide]                PROVIDE (__fini_array_start, .)

.fini_array
 *(.fini_array)
                [!provide]                PROVIDE (__fini_array_end, .)

.ctors          0xbf800060        0x0
 *crtbegin.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)
                0xbf800060                . = ALIGN (0x4)

.dtors          0xbf800060        0x0
 *crtbegin.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)
                0xbf800060                . = ALIGN (0x4)

.eh_frame       0xbf800060        0x0
 *(.eh_frame)
                0xbf800060                . = ALIGN (0x4)

.gcc_except_table
                0xbf800060        0x0
 *(.gcc_except_table)
                0xbf800060                . = ALIGN (0x4)

.jcr
 *(.jcr)
                0xbf800060                __got_start = .

.got
 *(.got.plt)
 *(.got)
 *(.rel.got)
                0xbf800060                __got_end = .

.data           0xbf800060        0x0
                0xbf800060                __data_start = ABSOLUTE (.)
 *(.data)
 .data          0xbf800060        0x0 iointerface.o
 .data          0xbf800060        0x0 dldi_header.o
 *(.data.*)
 *(.gnu.linkonce.d*)
                0xbf800060                . = ALIGN (0x4)
                0xbf800060                __data_end = ABSOLUTE (.)
                0xbf800060                __data_end = .

.igot.plt       0xbf800060        0x0
 .igot.plt      0xbf800060        0x0 iointerface.o

.bss            0xbf800060        0x0
                0xbf800060                __bss_start = ABSOLUTE (.)
                0xbf800060                __bss_start__ = ABSOLUTE (.)
 *(.dynbss)
 *(.gnu.linkonce.b*)
 *(.bss*)
 .bss           0xbf800060        0x0 iointerface.o
 .bss           0xbf800060        0x0 dldi_header.o
 *(COMMON)
                0xbf800060                . = ALIGN (0x4)
                0xbf800060                __bss_end = .
                0xbf800060                __bss_end__ = .
                0xbf800060                _end = .
                0xbf800060                __end__ = .
                [!provide]                PROVIDE (end, _end)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x22
 *(.comment)
 .comment       0x00000000       0x22 iointerface.o
                                 0x23 (size before relaxing)

.ARM.attributes
                0x00000000       0x2a
 .ARM.attributes
                0x00000000       0x2c iointerface.o
 .ARM.attributes
                0x0000002c       0x14 dldi_header.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x38
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x18 iointerface.o
 .debug_aranges
                0x00000018       0x20 dldi_header.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x147
 *(.debug_info)
 .debug_info    0x00000000       0x6e iointerface.o
 .debug_info    0x0000006e       0xd9 dldi_header.o

.debug_abbrev   0x00000000       0x38
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x24 iointerface.o
 .debug_abbrev  0x00000024       0x14 dldi_header.o

.debug_line     0x00000000       0xbd
 *(.debug_line)
 .debug_line    0x00000000       0x1d iointerface.o
 .debug_line    0x0000001d       0xa0 dldi_header.o

.debug_frame
 *(.debug_frame)

.debug_str      0x00000000      0x12a
 *(.debug_str)
 .debug_str     0x00000000      0x12a iointerface.o
                                0x15e (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.stack          0x00080000        0x0
                0x00080000                _stack = .
 *(.stack)
OUTPUT(C:/devkitPro/msys/home/alpha2fix5/hyperspeedup/code_container/patchpat1new/patchpat1new.elf elf32-littlearm)
